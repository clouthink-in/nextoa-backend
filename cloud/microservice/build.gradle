buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

apply plugin: "io.spring.dependency-management"

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-starter-parent:${springCloudVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

apply plugin: 'org.springframework.boot'

dependencies {
    compile libs.springDataMongodb
    compile libs.springSecurity
    compile libs.daas

    compile "org.springframework.boot:spring-boot-starter"
    compile "org.springframework.boot:spring-boot-starter-web"
//    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.cloud:spring-cloud-starter-eureka"

    compile project(':shared')
    compile project(':security/spring')
    compile project(':account/starter')
    compile project(':audit/starter')
    compile project(':rbac/starter')
    compile project(':storage/gridfs')
    compile project(':storage/rest')
    compile project(':sms/starter')
    compile project(':team/starter')
    compile project(':support/session')
    compile project(':support/cors')
    compile project(':support/security')
    compile project(':devops/webhook')

}

bootRun {
    if (project.hasProperty('jvmArgs')) {
        jvmArgs project.jvmArgs.split('\\s+')
    }
    if (project.hasProperty('args')) {
        args project.args.split('\\s+')
    }
}
